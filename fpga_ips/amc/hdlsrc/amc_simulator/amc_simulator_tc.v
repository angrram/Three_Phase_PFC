// -------------------------------------------------------------
// 
// File Name: .\hdlsrc\amc_simulator\amc_simulator_tc.v
// Created: 2025-05-02 11:44:07
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: amc_simulator_tc
// Source Path: amc_simulator_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb_4000000_1_0: identical to clk_enable
// enb         : 4000000x slower than clk with last phase
// enb_1_1_1   : 4000000x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module amc_simulator_tc
          (clk,
           rst,
           clk_enable,
           enb_4000000_1_0,
           enb,
           enb_1_1_1);


  input   clk;
  input   rst;
  input   clk_enable;
  output  enb_4000000_1_0;
  output  enb;
  output  enb_1_1_1;


  reg [21:0] count4000000;  // ufix22
  wire comp_0_tmp;
  wire phase_0_tmp;
  reg  phase_0;
  wire enb_1;
  wire comp_1_tmp;
  wire phase_1_tmp;
  reg  phase_1;
  wire enb_1_1_1_1;


  assign enb_4000000_1_0 = clk_enable;

  // Count limited, Unsigned Counter
  //  initial value   = 1
  //  step value      = 1
  //  count to value  = 3999999
  always @(posedge clk)
    begin : counter_4000000_process
      if (rst == 1'b1) begin
        count4000000 <= 22'b0000000000000000000001;
      end
      else begin
        if (clk_enable) begin
          if (count4000000 >= 22'b1111010000100011111111) begin
            count4000000 <= 22'b0000000000000000000000;
          end
          else begin
            count4000000 <= count4000000 + 22'b0000000000000000000001;
          end
        end
      end
    end

  assign comp_0_tmp = count4000000 == 22'b1111010000100011111111;

  assign phase_0_tmp = comp_0_tmp & clk_enable;

  always @(posedge clk)
    begin : phase_delay_process
      if (rst == 1'b1) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end

  assign enb_1 = phase_0 & clk_enable;

  assign enb = enb_1;

  assign comp_1_tmp = count4000000 == 22'b0000000000000000000000;

  assign phase_1_tmp = comp_1_tmp & clk_enable;

  always @(posedge clk)
    begin : phase_delay_1_process
      if (rst == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end

  assign enb_1_1_1_1 = phase_1 & clk_enable;

  assign enb_1_1_1 = enb_1_1_1_1;

endmodule  // amc_simulator_tc

