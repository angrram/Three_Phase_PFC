// -------------------------------------------------------------
// 
// File Name: .\hdlsrc\int2bin_sdi\in2bin.v
// Created: 2024-09-18 12:34:23
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: in2bin
// Source Path: int2bin_sdi/model_int2bin_sdi/in2bin
// Hierarchy Level: 1
// Model version: 1.47
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module in2bin
          (clk,
           rst,
           enb_1_20_0,
           v1_1,
           v1_2,
           v2_1,
           v2_2,
           v3_1,
           v3_2,
           num_vx_x,
           SDI_1,
           SCK,
           nCS1,
           nCS2,
           nCS3);


  input   clk;
  input   rst;
  input   enb_1_20_0;
  input   [7:0] v1_1;  // uint8
  input   [7:0] v1_2;  // uint8
  input   [7:0] v2_1;  // uint8
  input   [7:0] v2_2;  // uint8
  input   [7:0] v3_1;  // uint8
  input   [7:0] v3_2;  // uint8
  input   [7:0] num_vx_x;  // uint8
  output  SDI_1;
  output  SCK;
  output  nCS1;
  output  nCS2;
  output  nCS3;


  wire [7:0] Constant_out1;  // uint8
  wire [7:0] selector;  // uint8
  wire [7:0] Index_Vector_out1;  // uint8
  wire inttobin_out1_0;
  wire inttobin_out1_1;
  wire inttobin_out1_2;
  wire inttobin_out1_3;
  wire inttobin_out1_4;
  wire inttobin_out1_5;
  wire inttobin_out1_6;
  wire inttobin_out1_7;
  wire sdi_out1;
  reg  Delay_out1;
  wire en_sdi;
  wire sdi_out2;
  wire sdi_out3;
  wire sdi_out4;
  wire sdi_out5;
  wire sdi_out6;


  assign Constant_out1 = 8'b00000000;


  assign Index_Vector_out1 = (selector == 8'b00000001 ? v1_1 :
              (selector == 8'b00000010 ? v1_2 :
              (selector == 8'b00000011 ? v2_1 :
              (selector == 8'b00000100 ? v2_2 :
              (selector == 8'b00000101 ? v3_1 :
              (selector == 8'b00000110 ? v3_2 :
              Constant_out1))))));


  inttobin u_inttobin (.In1(Index_Vector_out1),  // uint8
                       .vector_bin_0(inttobin_out1_0),  // boolean
                       .vector_bin_1(inttobin_out1_1),  // boolean
                       .vector_bin_2(inttobin_out1_2),  // boolean
                       .vector_bin_3(inttobin_out1_3),  // boolean
                       .vector_bin_4(inttobin_out1_4),  // boolean
                       .vector_bin_5(inttobin_out1_5),  // boolean
                       .vector_bin_6(inttobin_out1_6),  // boolean
                       .vector_bin_7(inttobin_out1_7)  // boolean
                       );
  always @(posedge clk)
    begin : Delay_process
      if (rst == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb_1_20_0) begin
          Delay_out1 <= sdi_out1;
        end
      end
    end


  int2bin u_int2bin (.clk(clk),
                     .rst(rst),
                     .enb_1_20_0(enb_1_20_0),
                     .done(Delay_out1),
                     .vx_x_cha(num_vx_x),  // uint8
                     .selector(selector),  // uint8
                     .en_sdi(en_sdi)
                     );
  sdi u_sdi (.clk(clk),
             .rst(rst),
             .enb_1_20_0(enb_1_20_0),
             .selector(selector),  // uint8
             .vector_bin_0(inttobin_out1_0),  // boolean
             .vector_bin_1(inttobin_out1_1),  // boolean
             .vector_bin_2(inttobin_out1_2),  // boolean
             .vector_bin_3(inttobin_out1_3),  // boolean
             .vector_bin_4(inttobin_out1_4),  // boolean
             .vector_bin_5(inttobin_out1_5),  // boolean
             .vector_bin_6(inttobin_out1_6),  // boolean
             .vector_bin_7(inttobin_out1_7),  // boolean
             .en_sdi(en_sdi),
             .done(sdi_out1),
             .SDI_1(sdi_out2),
             .SCK(sdi_out3),
             .nCS1(sdi_out4),
             .nCS2(sdi_out5),
             .nCS3(sdi_out6)
             );
  assign SDI_1 = sdi_out2;

  assign SCK = sdi_out3;

  assign nCS1 = sdi_out4;

  assign nCS2 = sdi_out5;

  assign nCS3 = sdi_out6;

endmodule  // in2bin

