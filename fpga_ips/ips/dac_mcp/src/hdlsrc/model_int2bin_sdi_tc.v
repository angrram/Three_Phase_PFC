// -------------------------------------------------------------
// 
// File Name: .\hdlsrc\int2bin_sdi\model_int2bin_sdi_tc.v
// Created: 2024-09-18 12:34:23
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: model_int2bin_sdi_tc
// Source Path: model_int2bin_sdi_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb_1_10_0  : identical to clk_enable
// enb_1_20_0  : 2x slower than clk with last phase
// enb_1_20_1  : 2x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module model_int2bin_sdi_tc
          (clk,
           rst,
           clk_enable,
           enb_1_10_0,
           enb_1_20_0,
           enb_1_20_1);


  input   clk;
  input   rst;
  input   clk_enable;
  output  enb_1_10_0;
  output  enb_1_20_0;
  output  enb_1_20_1;


  reg  count2;  // ufix1
  wire comp_0_tmp;
  wire phase_0_tmp;
  reg  phase_0;
  wire enb_1_20_0_1;
  wire comp_1_tmp;
  wire phase_1_tmp;
  reg  phase_1;
  wire enb_1_20_1_1;


  assign enb_1_10_0 = clk_enable;

  // Count limited, Unsigned Counter
  //  initial value   = 1
  //  step value      = 1
  //  count to value  = 1
  always @(posedge clk)
    begin : counter_2_process
      if (rst == 1'b1) begin
        count2 <= 1'b1;
      end
      else begin
        if (clk_enable) begin
          count2 <=  ~ count2;
        end
      end
    end



  assign comp_0_tmp = count2 == 1'b1;



  assign phase_0_tmp = comp_0_tmp & clk_enable;



  always @(posedge clk)
    begin : phase_delay_process
      if (rst == 1'b1) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end



  assign enb_1_20_0_1 = phase_0 & clk_enable;



  assign enb_1_20_0 = enb_1_20_0_1;

  assign comp_1_tmp = count2 == 1'b0;



  assign phase_1_tmp = comp_1_tmp & clk_enable;



  always @(posedge clk)
    begin : phase_delay_1_process
      if (rst == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end



  assign enb_1_20_1_1 = phase_1 & clk_enable;



  assign enb_1_20_1 = enb_1_20_1_1;

endmodule  // model_int2bin_sdi_tc

